{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\-TmX\\\\Desktop\\\\Zaliczenie\\\\src\\\\App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport Form from \"./app_component/form.component\";\nimport Weather from \"./app_component/weather.component\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Api_Key = \"429736441cf3572838aa10530929f7cd\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.getWeather = async e => {\n      e.preventDefault();\n      const country = e.target.elements.country.value;\n      const city = e.target.elements.city.value;\n\n      if (country && city) {\n        const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${Api_Key}`);\n        const response = await api_call.json();\n        this.setState({\n          city: `${response.name}, ${response.sys.country}`,\n          country: response.sys.country,\n          main: response.weather[0].main,\n          celsius: this.calCelsius(response.main.temp),\n          temp_max: this.calCelsius(response.main.temp_max),\n          temp_min: this.calCelsius(response.main.temp_min),\n          description: response.weather[0].description,\n          error: false\n        });\n        console.log(response);\n      } else {\n        this.setState({\n          error: true\n        });\n      }\n    };\n\n    this.state = {\n      city: undefined,\n      country: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: null,\n      temp_min: null,\n      description: \"\",\n      error: false\n    };\n  }\n\n  get_WeatherIcon(icons, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId < 232:\n        this.setState({\n          icon: icons.Thunderstorm\n        });\n        break;\n\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({\n          icon: icons.Drizzle\n        });\n        break;\n\n      case rangeId >= 500 && rangeId <= 521:\n        this.setState({\n          icon: icons.Rain\n        });\n        break;\n\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({\n          icon: icons.Snow\n        });\n        break;\n\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({\n          icon: icons.Atmosphere\n        });\n        break;\n\n      case rangeId === 800:\n        this.setState({\n          icon: icons.Clear\n        });\n        break;\n\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({\n          icon: icons.Clouds\n        });\n        break;\n\n      default:\n        this.setState({\n          icon: icons.Clouds\n        });\n    }\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        loadweather: this.getWeather,\n        error: this.state.error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Weather, {\n        cityname: this.state.city,\n        weatherIcon: this.state.icon,\n        temp_celsius: this.state.celsius,\n        temp_max: this.state.temp_max,\n        temp_min: this.state.temp_min,\n        description: this.state.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/-TmX/Desktop/Zaliczenie/src/App.js"],"names":["React","Form","Weather","Api_Key","App","Component","constructor","getWeather","e","preventDefault","country","target","elements","value","city","api_call","fetch","response","json","setState","name","sys","main","weather","celsius","calCelsius","temp","temp_max","temp_min","description","error","console","log","state","undefined","get_WeatherIcon","icons","rangeId","icon","Thunderstorm","Drizzle","Rain","Snow","Atmosphere","Clear","Clouds","cell","Math","floor","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport Form from \"./app_component/form.component\";\nimport Weather from \"./app_component/weather.component\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\n\nconst Api_Key = \"429736441cf3572838aa10530929f7cd\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      city: undefined,\n      country: undefined,\n      main: undefined,\n      celsius: undefined,\n      temp_max: null,\n      temp_min: null,\n      description: \"\",\n      error: false\n    };\n  }\n\n  get_WeatherIcon(icons, rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId < 232:\n        this.setState({ icon: icons.Thunderstorm });\n        break;\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({ icon: icons.Drizzle });\n        break;\n      case rangeId >= 500 && rangeId <= 521:\n        this.setState({ icon: icons.Rain });\n        break;\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({ icon: icons.Snow });\n        break;\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({ icon: icons.Atmosphere });\n        break;\n      case rangeId === 800:\n        this.setState({ icon: icons.Clear });\n        break;\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({ icon: icons.Clouds });\n        break;\n      default:\n        this.setState({ icon: icons.Clouds });\n    }\n  }\n\n  calCelsius(temp) {\n    let cell = Math.floor(temp - 273.15);\n    return cell;\n  }\n\n  getWeather = async e => {\n    e.preventDefault();\n\n    const country = e.target.elements.country.value;\n    const city = e.target.elements.city.value;\n\n    if (country && city) {\n      const api_call = await fetch(\n        `http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${Api_Key}`\n      );\n\n      const response = await api_call.json();\n\n      this.setState({\n        city: `${response.name}, ${response.sys.country}`,\n        country: response.sys.country,\n        main: response.weather[0].main,\n        celsius: this.calCelsius(response.main.temp),\n        temp_max: this.calCelsius(response.main.temp_max),\n        temp_min: this.calCelsius(response.main.temp_min),\n        description: response.weather[0].description,\n        error: false\n      });\n\n      \n\n      console.log(response);\n    } else {\n      this.setState({\n        error: true\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Form loadweather={this.getWeather} error={this.state.error} />\n        <Weather\n          cityname={this.state.city}\n          weatherIcon={this.state.icon}\n          temp_celsius={this.state.celsius}\n          temp_max={this.state.temp_max}\n          temp_min={this.state.temp_min}\n          description={this.state.description}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}